spring.application.name=DEMO-BUSINESS
server.port=8084
#server.servlet.context-path=/api/plus/
#基于druid数据库连接池配置
#数据连接池类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#数据库平台，暂时为mysql
spring.datasource.platform=mysql
spring.datasource.url=jdbc:mysql://192.168.17.30:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
#以下为druid连接池配置
#连接池配置
#初始化连接池大小
spring.datasource.druid.initialSize=10
#最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止
spring.datasource.druid.minIdle=1
#最大活跃数
spring.datasource.druid.maxActive=50
#最大建立连接等待时间。如果超过此时间将接到异常。设为－1表示无限制
spring.datasource.druid.maxWait=60000
#失效检查线程运行时间间隔，要小于MySQL默认
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#连接的超时时间，默认为半小时
spring.datasource.druid.minEvictableIdleTimeMillis=300000
#检查连接有效性的SQL语句
spring.datasource.druid.validationQuery=SELECT 1 FROM dual
#检查连接是否有效
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=true
spring.datasource.druid.testOnReturn=false
#开启池的prepared statement 池功能
spring.datasource.druid.poolPreparedStatements=false
#statement池能够同时分配的打开的statements的最大数量
spring.datasource.druid.maxOpenPreparedStatements=50
#开启StatFilter
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=1000
#开启Slf4jFilter,使用logback时注释
#spring.datasource.druid.filter.slf4j.enabled=true
#spring.datasource.druid.filter.slf4j.data-source-log-enabled=false
#spring.datasource.druid.filter.slf4j.connection-log-enabled=false
#spring.datasource.druid.filter.slf4j.statement-log-enabled=false
#spring.datasource.druid.filter.slf4j.result-set-log-enabled=false
#开启WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.log-violation=true
spring.datasource.druid.filter.wall.throw-exception=false
spring.datasource.druid.filter.wall.config.delete-where-none-check=true
#开启Web监控
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.exclusions=/druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico
spring.datasource.druid.web-stat-filter.url-pattern=/*
#开启监控页面
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin123
#打开 druid 连接池监控报错 Sorry, you are not permitted to view this page
spring.datasource.druid.stat-view-servlet.allow=

#mybatis-plus 配置
#xml扫描，多个目录用逗号或者分号隔开隔开
mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml
mybatis-plus.type-aliases-package=com.dhj.demo.mp.entity
mybatis-plus.global-config.banner=true
#主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
mybatis-plus.global-config.db-config.id-type=auto
# 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
mybatis-plus.configuration.map-underscore-to-camel-case=true
# 返回map时true:当查询数据为空时字段返回为null,false:不加这个查询数据为空时，字段将被隐藏
mybatis-plus.configuration.call-setters-on-nulls=true
# 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
#mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#mybatis log 打印mybatis sql
#logging.level.com.dhj.demo.mp.mapper=debug

#设置单个文件大小 ，解决上传文件报The field file exceeds its maximum permitted size of 1048576 bytes.
spring.servlet.multipart.max-file-size= 50MB
# 设置单次请求文件的总大小
spring.servlet.multipart.max-request-size= 50MB


##环境配置文件路径
#conf_root_path=E:\\idea-space\\healthmanager_v2\\configfiles\\data
#
##系统配置文件路径
#conf_system_root_path=E:\\idea-space\\healthmanager_v2\\configfiles\\system


#redis配置
redis.ips=10.130.215.197:6379
#,10.137.146.93:7379
redis.maxredirections=1
redis.timeout=5000
redis.maxIdle=100
redis.minIdle=50
redis.maxWait=1000
redis.testOnBorrow=false
redis.testWhileIdle=true
redis.prefix=data_
redis.online=true

